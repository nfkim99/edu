Object 

모든 클래스는 Object 클래스를 상속합니다.
컴파일러가 내부적으로 넣어줌

11개의 함수 중 주로 쓰이는 3가지
이퀄스 해시코드 toString

 컴파일러가 공짜로 해주는 거
 * 1. 자동 형변환
 * 2. 디폴트 생성자
 * 3. 상속시-디폴트 super 생성자
 * 4. extends Object


toString() : 
 toString 바디 내용이 없으면
 부모클래스인 Object 클래스의 함수가 호출(주소)된다
 ex) C@156643D4

 toString() 바디 내용이 있으면
 다형성의 오버라이딩 함수로 인해
 자식의 내용이 호출된다.
 ex) 안녕하세요


클래스 앞에 final은 상속을 할수가없다
함수 앞에 final은 오버라이딩 할수가 없다.


@Override 붙이기

상위 클래스의 메소드를 오버라이딩 하는 것이 목적이라는 선언.
오버라이딩을 하는 형태가 아니면 컴파일러가 오류 메시지 전달.


인터페이스

1. 인터페이스 안에는 public으로 선언된 상수가 들어갈 수 있다.
2. 인터페이스 안에는 함수 앞에 abstract를 붙여야 한다.

	abstract가 붙게 되면 body 내용이 못온다. = 함수 선언만 가능

	// 추상 메소드, 추상 함수, abstract (함수 선언만 가능) = 
	// 바디 실제 구현 부분이 없음
	// public abstract 는 생략 가능
	// 없으면 컴파일러가 붙여줌
	// abstract = 자손이 구현하라

implements
1. implements로 인터페이스를 구현하라
2. interface : 부모
3. class Printer implements Printable : 자식
4. 클래스와 문법은 같다.


// interface 가 나오게 된 배경

// 자바 = 단일상속
// 다중상속 지원

인터페이스 활용 => 약속, 규약, 강제 => 표준 

// 누군가가(갑님께서) 표준, 규약, 강제 이것밖에 없음


우리 사용자들은 
.class 파일을 던져주는걸 사용함



